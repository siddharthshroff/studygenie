import { useState } from "react";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import type { QuizQuestion } from "@shared/schema";
import type { GeneratedQuizQuestion } from "@/lib/types";

interface QuizViewProps {
  questions: QuizQuestion[] | GeneratedQuizQuestion[];
  onEdit?: (question: QuizQuestion) => void;
  onDelete?: (id: number) => void;
  onAdd?: () => void;
  isGenerated?: boolean;
}

export function QuizView({ 
  questions, 
  onEdit, 
  onDelete, 
  onAdd, 
  isGenerated = false 
}: QuizViewProps) {
  const [selectedAnswers, setSelectedAnswers] = useState<Record<string, string>>({});

  const handleAnswerChange = (questionIndex: number, answer: string) => {
    setSelectedAnswers(prev => ({
      ...prev,
      [questionIndex]: answer
    }));
  };

  return (
    <div className="space-y-6">
      {questions.map((question, index) => {
        const questionData = isGenerated 
          ? question as GeneratedQuizQuestion
          : question as QuizQuestion;

        return (
          <div key={isGenerated ? index : (question as QuizQuestion).id} className="bg-gray-50 rounded-xl p-6">
            <div className="flex items-start justify-between mb-4">
              <h4 className="text-lg font-medium text-gray-900">
                Question {index + 1}
              </h4>
              {!isGenerated && onEdit && onDelete && (
                <div className="flex space-x-2">
                  <button
                    onClick={() => onEdit(question as QuizQuestion)}
                    className="p-1 text-gray-400 hover:text-gray-600 transition-colors"
                  >
                    <i className="fas fa-edit text-sm"></i>
                  </button>
                  <button
                    onClick={() => onDelete((question as QuizQuestion).id)}
                    className="p-1 text-gray-400 hover:text-red-500 transition-colors"
                  >
                    <i className="fas fa-trash text-sm"></i>
                  </button>
                </div>
              )}
            </div>
            
            <p className="text-gray-900 mb-4 font-medium">{questionData.question}</p>
            
            <RadioGroup
              value={selectedAnswers[index] || ""}
              onValueChange={(value) => handleAnswerChange(index, value)}
              className="space-y-3"
            >
              {questionData.options.map((option, optionIndex) => (
                <div key={optionIndex} className="flex items-center space-x-3 p-3 border border-gray-200 rounded-lg hover:bg-white transition-colors cursor-pointer">
                  <RadioGroupItem value={optionIndex.toString()} id={`q${index}-option${optionIndex}`} />
                  <Label 
                    htmlFor={`q${index}-option${optionIndex}`}
                    className="flex-1 cursor-pointer text-gray-900"
                  >
                    {String.fromCharCode(65 + optionIndex)}) {option}
                  </Label>
                </div>
              ))}
            </RadioGroup>
            
            {isGenerated && (
              <div className="mt-3 text-sm text-gray-500">
                <i className="fas fa-robot mr-1"></i>
                Generated by AI
              </div>
            )}
          </div>
        );
      })}

      {/* Add New Question Button */}
      {onAdd && (
        <button
          onClick={onAdd}
          className="w-full border-2 border-dashed border-gray-300 rounded-xl p-6 flex items-center justify-center cursor-pointer hover:border-primary-400 hover:bg-primary-50 transition-colors"
        >
          <div className="text-center">
            <div className="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-3">
              <i className="fas fa-plus text-gray-500 text-xl"></i>
            </div>
            <p className="text-gray-600 font-medium">Add New Question</p>
          </div>
        </button>
      )}
    </div>
  );
}
